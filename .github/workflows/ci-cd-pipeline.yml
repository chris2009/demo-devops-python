name: CI/CD Pipeline - Deploy to AKS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.3

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install coverage

    - name: Run Unit Tests with Coverage
      run: |
        coverage run manage.py test api

    - name: Generate Coverage Report
      run: |
        coverage xml

    - name: Static Code Analysis
      uses: github/super-linter@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Code Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  contenerizacion:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: 050408/devops-image:latest

  deploy:
    needs: contenerizacion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Kubeconfig
        run: |
          mkdir -p "$HOME/.kube"
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > "$HOME/.kube/config"
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}

      - name: Get kubectl context
        run: kubectl config current-context

      - name: Kubectl Version
        run: kubectl version

      - name: Kubernetes Cluster Info
        run: kubectl cluster-info

      - name: Deploy to K8S
        run: |
          kubectl apply -f deploy/kubernetes-deployment.yml --validate=false;
          kubectl rollout status deployment/mi-aplicacion-deployment